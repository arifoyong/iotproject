{"version":3,"sources":["components/Navbar.js","components/MyModal.js","components/Setting.js","components/Dashboard.js","components/Line.js","components/Graph.js","App.js","serviceWorker.js","index.js"],"names":["MyNavbar","Navbar","bg","expand","Toggle","aria-controls","Collapse","id","Nav","className","Link","href","MyModal","props","show","handleClose","updateData","useState","dt","setForm","useEffect","URI","idNo","fetch","then","res","json","handleFormChange","e","persist","target","name","checked","value","Modal","size","onHide","Header","closeButton","Title","Body","Form","Row","Col","Group","controlId","Label","Control","disabled","type","onChange","location","Check","label","alertActive","temp_lcl","temp_ucl","humi_lcl","humi_ucl","batt_lcl","batt_ucl","ButtonToolbar","Button","variant","onClick","preventDefault","method","headers","body","JSON","stringify","response","ok","console","log","Setting","data","setData","targetData","setTargetData","setShow","handleShow","Container","fluid","Table","responsive","hover","map","item","i","index","key","scope","renderRow","displayCard","xs","md","lg","Card","to","pathname","deviceId","device","Text","temp","humi","dateString","d","Date","minutes","getMinutes","getDate","getMonth","getFullYear","getHours","formatDate","recordDate","Dashboard","Line","drawLineChart","wh","state","width","fs","lineChart","Chart","chartRef","current","getContext","datasets","tempData","options","maintainAspectRatio","legend","display","position","fontSize","title","text","scales","xAxes","time","unit","unitStepSize","round","tooltipFormat","displayFormats","hour","ticks","minRotation","maxRotation","yAxes","min","yMin","max","yMax","scaleLabel","labelString","yLabel","height","React","createRef","updateWindowDimensions","bind","this","window","addEventListener","setState","innerWidth","innerHeight","removeEventListener","style","ref","Component","baseSet","borderColor","fill","borderDash","pointRadius","borderWidth","makeDataSet","color","Graph","useParams","t","y","humiData","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oNAmBeA,EAfE,WACf,OACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MACxB,kBAACF,EAAA,EAAOG,OAAR,CAAeC,gBAAc,qBAC7B,kBAACJ,EAAA,EAAOK,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIE,KAAL,CAAUC,KAAK,KAAf,QACA,kBAACH,EAAA,EAAIE,KAAL,CAAUC,KAAK,YAAf,e,woBCwGKC,MA3Gf,SAAiBC,GAAQ,IACfC,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,YAAaC,EAAeH,EAAfG,WADL,EAEAC,mBAAS,IAFT,mBAEfC,EAFe,KAEXC,EAFW,KAItBC,qBAAU,WACR,IAAIC,EAAG,sBAAkBR,EAAMS,MAC/BC,MAAMF,GAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACxBF,MAAK,SAAAE,GACJP,EAAQO,QAEX,CAACb,EAAMS,OAEV,IAAMK,EAAmB,SAAAC,GACvBA,EAAEC,UACoB,gBAAlBD,EAAEE,OAAOC,KACXZ,GAAQ,SAAAD,GAAE,YAAUA,EAAV,eAAeU,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,aAElDb,GAAQ,SAAAD,GAAE,YAAUA,EAAV,eAAeU,EAAEE,OAAOC,KAAOH,EAAEE,OAAOG,YAwBtD,OACE,kBAACC,EAAA,EAAD,CAAOC,KAAK,KAAKrB,KAAMA,EAAMsB,OAAQrB,GACnC,kBAACmB,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,EAAA,EAAMK,MAAP,8BAEF,kBAACL,EAAA,EAAMM,KAAP,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACF,EAAA,EAAKG,MAAN,CAAYC,UAAU,YACpB,kBAACJ,EAAA,EAAKK,MAAN,kBACA,kBAACL,EAAA,EAAKM,QAAN,CAAcC,UAAQ,EAACC,KAAK,SAASlB,KAAK,KAAKE,MAAOf,EAAGX,GAAI2C,SAAUvB,KAEzE,kBAACc,EAAA,EAAKG,MAAN,CAAYC,UAAU,YACpB,kBAACJ,EAAA,EAAKK,MAAN,iBACA,kBAACL,EAAA,EAAKM,QAAN,CAAcE,KAAK,OAAOlB,KAAK,WAAWE,MAAOf,EAAGiC,SAAUD,SAAUvB,KAE1E,kBAACc,EAAA,EAAKG,MAAN,CAAYC,UAAU,eACpB,kBAACJ,EAAA,EAAKW,MAAN,CAAYH,KAAK,WAAWI,MAAM,iBAAiBtB,KAAK,cAAcC,QAASd,EAAGoC,YAAaJ,SAAUvB,MAG7G,kBAACgB,EAAA,EAAD,KACE,kBAACF,EAAA,EAAKG,MAAN,CAAYC,UAAU,YACpB,kBAACJ,EAAA,EAAKK,MAAN,wBACA,kBAACL,EAAA,EAAKM,QAAN,CAAcE,KAAK,SAASlB,KAAK,WAAWE,MAAOf,EAAGqC,SAAUL,SAAUvB,KAE5E,kBAACc,EAAA,EAAKG,MAAN,CAAYC,UAAU,YACpB,kBAACJ,EAAA,EAAKK,MAAN,wBACA,kBAACL,EAAA,EAAKM,QAAN,CAAcE,KAAK,SAASlB,KAAK,WAAWE,MAAOf,EAAGsC,SAAUN,SAAUvB,KAE5E,kBAACc,EAAA,EAAKG,MAAN,CAAYC,UAAU,YACpB,kBAACJ,EAAA,EAAKK,MAAN,qBACA,kBAACL,EAAA,EAAKM,QAAN,CAAcE,KAAK,SAASlB,KAAK,WAAWE,MAAOf,EAAGuC,SAAUP,SAAUvB,KAE5E,kBAACc,EAAA,EAAKG,MAAN,CAAYC,UAAU,YACpB,kBAACJ,EAAA,EAAKK,MAAN,qBACA,kBAACL,EAAA,EAAKM,QAAN,CAAcE,KAAK,SAASlB,KAAK,WAAWE,MAAOf,EAAGwC,SAAUR,SAAUvB,KAE5E,kBAACc,EAAA,EAAKG,MAAN,CAAYC,UAAU,YACpB,kBAACJ,EAAA,EAAKK,MAAN,oBACA,kBAACL,EAAA,EAAKM,QAAN,CAAcE,KAAK,SAASlB,KAAK,WAAWE,MAAOf,EAAGyC,SAAUT,SAAUvB,KAE5E,kBAACc,EAAA,EAAKG,MAAN,CAAYC,UAAU,YACpB,kBAACJ,EAAA,EAAKK,MAAN,oBACA,kBAACL,EAAA,EAAKM,QAAN,CAAcE,KAAK,SAASlB,KAAK,WAAWE,MAAOf,EAAG0C,SAAUV,SAAUvB,OAMhF,kBAACkC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQrD,UAAU,QAAQsD,QAAQ,UAAUd,KAAK,SAASe,QAvE/C,SAAApC,GACnBA,EAAEqC,iBAEF1C,MAAM,cAAe,CACnB2C,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUpD,KACpBM,MAAK,SAAA+C,GACFA,EAASC,GACXxD,IAEAyD,QAAQC,IAAI,4BAIhB3D,MAsDQ,UAGA,kBAAC+C,EAAA,EAAD,CAAQrD,UAAU,QAAQsD,QAAQ,SAASC,QAASjD,GAApD,eCjGNM,EAAM,cAoEGsD,MAlEf,WAAoB,IAAD,EACO1D,mBAAS,IADhB,mBACV2D,EADU,KACJC,EADI,OAEmB5D,mBAAS,GAF5B,mBAEV6D,EAFU,KAEEC,EAFF,OAGO9D,oBAAS,GAHhB,mBAGVH,EAHU,KAGJkE,EAHI,KAMXC,EAAa,SAACrD,GAClBoD,GAAQ,GACRD,EAAcnD,EAAEE,OAAOvB,KAGnBS,EAAa,WACjBO,MAAMF,GAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACxBF,MAAK,SAAAE,GACJmD,EAAQnD,OAyBd,OArBAN,qBAAU,WACRJ,MACC,IAoBD,kBAACkE,EAAA,EAAD,CAAWzE,UAAU,kBAAkB0E,MAAM,QAC3C,kBAACC,EAAA,EAAD,CAAOC,WAAW,KAAKC,OAAK,GAC1B,+BACE,4BACE,kCACA,wCACA,4CACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,+BAGJ,+BACGV,EAAKW,KAAI,SAACC,EAAMC,GAAP,OAnCA,SAACD,EAAME,GACvB,OACE,wBAAIC,IAAKD,GACP,wBAAIE,MAAM,OAAOJ,EAAKjF,IACtB,4BAAKiF,EAAKrC,UACV,4BAAKqC,EAAKlC,YAAc,OAAS,SACjC,4BAAKkC,EAAKjC,UACV,4BAAKiC,EAAKhC,UACV,4BAAKgC,EAAK/B,UACV,4BAAK+B,EAAK9B,UACV,4BAAK8B,EAAK7B,UACV,4BAAK6B,EAAK5B,UACV,4BAAI,kBAACE,EAAA,EAAD,CAAQvD,GAAIiF,EAAKjF,GAAIwD,QAAQ,UAAUC,QAASiB,GAAhD,UAuBqBY,CAAUL,EAAMC,QAG3C,kBAAC,EAAD,CAAS3E,KAAMA,EAAMC,YAvDL,kBAAMiE,GAAQ,IAuDiBhE,WAAYA,EAAYM,KAAMwD,M,QC7D7EzD,EAAM,yBAcNyE,EAAc,SAAC5E,EAAIwE,GACvB,OACE,kBAAC/C,EAAA,EAAD,CAAKgD,IAAKD,EAAOK,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAClC,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMzF,UAAU,kBAAkB0F,GAAI,CAAEC,SAAS,UAAD,OAAYlF,EAAGmF,YAC7D,kBAACH,EAAA,EAAK7D,OAAN,YAAkBnB,EAAGmF,SAArB,MAAkCnF,EAAGoF,OAAOnD,WAE9C,kBAAC+C,EAAA,EAAK1D,KAAN,KACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACuD,EAAA,EAAKK,KAAN,oBACA,kBAACL,EAAA,EAAKK,KAAN,KAAYrF,EAAGsF,KAAf,UAEF,kBAAC7D,EAAA,EAAD,KACE,kBAACuD,EAAA,EAAKK,KAAN,iBACA,kBAACL,EAAA,EAAKK,KAAN,KAAYrF,EAAGuF,KAAf,OAGJ,kBAAC/D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACuD,EAAA,EAAKK,KAAN,CAAW9F,UAAU,oBAArB,gBAhCK,SAACiG,GAClB,IAAMC,EAAI,IAAIC,KAAKF,GAObG,EAAUF,EAAEG,aAAe,GAAK,IAAMH,EAAEG,aAAeH,EAAEG,aAC/D,OAAOH,EAAEI,UAAY,IAPF,CACjB,MAAO,MAAO,MACd,MAAO,MAAO,MAAO,MACrB,MAAO,MAAO,MACd,MAAO,OAG6BJ,EAAEK,YAAc,IAAML,EAAEM,cAAgB,IAAMN,EAAEO,WAAa,IAAML,EAwB7EM,CAAWjG,EAAGkG,mBAgC7BC,MApBf,WAAsB,IAAD,EACKpG,mBAAS,IADd,mBACZ2D,EADY,KACNC,EADM,KAUnB,OAPAzD,qBAAU,WACRG,MAAMF,GAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACxBF,MAAK,SAAAE,GACJmD,EAAQnD,QAEX,IAGD,kBAACwD,EAAA,EAAD,KACE,kBAACxC,EAAA,EAAD,KACGkC,EAAKW,KAAI,SAACX,EAAMc,GAAP,OAAiBI,EAAYlB,EAAMc,S,iECkCtC4B,E,YAjGb,WAAYzG,GAAQ,IAAD,8BACjB,4CAAMA,KAwBR0G,cAAgB,WACd,IAAMC,EAAK,EAAKC,MAAMC,MAEhBC,EAAKH,EADQ,IACU,GAAK,EAElC,EAAKI,UAAY,IAAIC,IAAM,EAAKC,SAASC,QAAQC,WAAW,MAAO,CACjE/E,KAAM,OACN2B,KAAM,CAAEqD,SAAU,EAAKpH,MAAMqH,UAC7BC,QAAS,CACP9C,YAAY,EACZ+C,qBAAqB,EACrBC,OAAQ,CACNC,QAASd,EAVI,IAWbe,SAAU,SACVC,SAAUb,GAEZc,MAAO,CACLH,SAAS,EACTI,KAAM,EAAK7H,MAAM4H,MACjBD,SAAe,IAALb,GAEZgB,OAAQ,CACNC,MAAO,CAAC,CACN3F,KAAM,OACN4F,KAAM,CACJC,KAAM,OACNC,aAAc,GACdC,MAAO,OACPC,cAAe,YACfC,eAAgB,CACdC,KAAM,kBAGVC,MAAO,CACLZ,SAAUb,EACV0B,YAAa,EACbC,YAAa,MAGjBC,MAAO,CAAC,CACNtG,KAAM,SACNmG,MAAO,CACLI,IAAK,EAAK3I,MAAM4I,KAChBC,IAAK,EAAK7I,MAAM8I,KAChBnB,SAAUb,GAEZiC,WAAY,CACVtB,SAAS,EACTuB,YAAa,EAAKhJ,MAAMiJ,OACxBtB,SAAUb,UAxEpB,EAAKF,MAAQ,CAAEC,MAAO,EAAGqC,OAAQ,GAEjC,EAAKjC,SAAWkC,IAAMC,YACtB,EAAKC,uBAAyB,EAAKA,uBAAuBC,KAA5B,gBALb,E,kFASjBC,KAAK7C,kB,0CAIL6C,KAAKF,yBACLG,OAAOC,iBAAiB,SAAUF,KAAKF,0B,+CAIvCE,KAAKG,SAAS,CAAE7C,MAAO2C,OAAOG,WAAYT,OAAQM,OAAOI,gB,6CAIzDJ,OAAOK,oBAAoB,SAAUN,KAAKF,0B,+BA8D1C,OACE,yBAAK3J,GAAG,iBACN,4BAAQA,GAAG,UAAUoK,MAAO,GAI1BC,IAAKR,KAAKtC,gB,GA3FDkC,IAAMa,W,8NCKzB,IAAMC,EAAU,CACdzH,MAAO,GACP0H,YAAa,MACbnG,KAAM,GACNoG,MAAM,EACNC,WAAY,CAAC,GAAI,GACjBC,YAAa,EACbC,YAAa,GAGTC,EAAc,SAAC/H,EAAOgI,EAAOzG,EAAMqG,EAAYC,EAAaC,GAChE,O,yVAAO,IAAKL,EAAZ,CAAqBzH,MAAOA,EAAO0H,YAAaM,EAAOzG,KAAMA,EAAMqG,WAAYA,EAAYC,YAAaA,EAAaC,YAAaA,KAiDrHG,MA7Cf,WAAkB,IACR/K,EAAOgL,cAAPhL,GADO,EAESU,mBAAS,IAFlB,mBAER2D,EAFQ,KAEFC,EAFE,KAITqD,EAAW,CACfkD,EAAY,OAAQ,OAAQxG,EAAKW,KAAI,SAAAoB,GAAC,MAAK,CAAE6E,EAAG7E,EAAES,WAAYqE,EAAG9E,EAAEH,SAAU,GAAI,EAAG,GACpF4E,EAAY,WAAY,SAAUxG,EAAKW,KAAI,SAAAoB,GAAC,MAAK,CAAE6E,EAAG7E,EAAES,WAAYqE,EAAG9E,EAAEL,OAAO9C,aAAc,CAAC,GAAI,GAAI,EAAG,GAC1G4H,EAAY,WAAY,QAASxG,EAAKW,KAAI,SAAAoB,GAAC,MAAK,CAAE6E,EAAG7E,EAAES,WAAYqE,EAAG9E,EAAEL,OAAO/C,aAAc,CAAC,GAAI,GAAI,EAAG,IAGrGmI,EAAW,CACfN,EAAY,OAAQ,OAAQxG,EAAKW,KAAI,SAAAoB,GAAC,MAAK,CAAE6E,EAAG7E,EAAES,WAAYqE,EAAG9E,EAAEF,SAAU,GAAI,EAAG,GACpF2E,EAAY,WAAY,SAAUxG,EAAKW,KAAI,SAAAoB,GAAC,MAAK,CAAE6E,EAAG7E,EAAES,WAAYqE,EAAG9E,EAAEL,OAAO5C,aAAc,CAAC,GAAI,GAAI,EAAG,GAC1G0H,EAAY,WAAY,QAASxG,EAAKW,KAAI,SAAAoB,GAAC,MAAK,CAAE6E,EAAG7E,EAAES,WAAYqE,EAAG9E,EAAEL,OAAO7C,aAAc,CAAC,GAAI,GAAI,EAAG,IAY3G,OATArC,qBAAU,WACR,IAAIC,EAAG,sBAAkBd,EAAlB,OACPgB,MAAMF,GAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACxBF,MAAK,SAAAE,GACJmD,EAAQnD,QAEX,CAACnB,IAIF,kBAAC2E,EAAA,EAAD,CAAWC,MAAM,QAAQ1E,UAAU,mBACjC,kBAACqD,EAAA,EAAD,CAAQC,QAAQ,mBACd,kBAAC,IAAD,CAAMoC,GAAG,KAAT,SAGF,kBAACzD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKqD,GAAI,GAAIC,GAAI,GACf,kBAAC,EAAD,CAAMwC,MAAK,2BAAsBlI,EAAtB,KAA6BuJ,OAAO,sBAAsBL,KAAM,GAAIE,KAAM,GAAIzB,SAAUA,KAGrG,kBAACvF,EAAA,EAAD,CAAKqD,GAAI,GAAIC,GAAI,GACf,kBAAC,EAAD,CAAMwC,MAAK,wBAAmBlI,EAAnB,KAA0BuJ,OAAO,eAAeL,KAAM,GAAIE,KAAM,IAAKzB,SAAUwD,Q,OCjCrFC,MAhBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,yBAAKlL,UAAU,mBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmL,OAAK,EAACC,KAAK,IAAIC,UAAWzE,IACjC,kBAAC,IAAD,CAAOuE,OAAK,EAACC,KAAK,WAAWC,UAAWnH,IACxC,kBAAC,IAAD,CAAOiH,OAAK,EAACC,KAAK,aAAaC,UAAWR,QCPhCS,QACW,cAA7B1B,OAAOlH,SAAS6I,UAEe,UAA7B3B,OAAOlH,SAAS6I,UAEhB3B,OAAOlH,SAAS6I,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhL,MAAK,SAAAiL,GACjCA,EAAaC,iB","file":"static/js/main.203e28c4.chunk.js","sourcesContent":["import React from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\n\r\nconst MyNavbar = () => {\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"/\">Home</Nav.Link>\r\n          <Nav.Link href=\"/setting\">Setting</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default MyNavbar","import React, { useState, useEffect } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nfunction MyModal(props) {\r\n  const { show, handleClose, updateData } = props;\r\n  const [dt, setForm] = useState({})\r\n\r\n  useEffect(() => {\r\n    let URI = `/api/device/${props.idNo}`\r\n    fetch(URI).then(res => res.json())\r\n      .then(json => {\r\n        setForm(json)\r\n      })\r\n  }, [props.idNo])\r\n\r\n  const handleFormChange = e => {\r\n    e.persist()\r\n    if (e.target.name === 'alertActive') {\r\n      setForm(dt => ({ ...dt, [e.target.name]: e.target.checked }))\r\n    } else {\r\n      setForm(dt => ({ ...dt, [e.target.name]: e.target.value }))\r\n    }\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n\r\n    fetch('/api/device', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(dt)\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        updateData()\r\n      } else {\r\n        console.log(\"Failed to update data\")\r\n      }\r\n    })\r\n\r\n    handleClose()\r\n  }\r\n\r\n  return (\r\n    <Modal size=\"lg\" show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Edit Device Settings</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Row>\r\n            <Col>\r\n              <Form.Group controlId=\"deviceId\">\r\n                <Form.Label>Device ID</Form.Label>\r\n                <Form.Control disabled type=\"number\" name=\"id\" value={dt.id} onChange={handleFormChange} />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"location\">\r\n                <Form.Label>Location</Form.Label>\r\n                <Form.Control type=\"text\" name=\"location\" value={dt.location} onChange={handleFormChange} />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"alertactive\">\r\n                <Form.Check type=\"checkbox\" label=\"Activate alert\" name=\"alertActive\" checked={dt.alertActive} onChange={handleFormChange} />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlId=\"temp_lcl\">\r\n                <Form.Label>Temperature LCL</Form.Label>\r\n                <Form.Control type=\"number\" name=\"temp_lcl\" value={dt.temp_lcl} onChange={handleFormChange} />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"temp_ucl\">\r\n                <Form.Label>Temperature UCL</Form.Label>\r\n                <Form.Control type=\"number\" name=\"temp_ucl\" value={dt.temp_ucl} onChange={handleFormChange} />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"humi_lcl\">\r\n                <Form.Label>Humidity LCL</Form.Label>\r\n                <Form.Control type=\"number\" name=\"humi_lcl\" value={dt.humi_lcl} onChange={handleFormChange} />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"humi_ucl\">\r\n                <Form.Label>Humidity UCL</Form.Label>\r\n                <Form.Control type=\"number\" name=\"humi_ucl\" value={dt.humi_ucl} onChange={handleFormChange} />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"batt_lcl\">\r\n                <Form.Label>Battery LCL</Form.Label>\r\n                <Form.Control type=\"number\" name=\"batt_lcl\" value={dt.batt_lcl} onChange={handleFormChange} />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"batt_ucl\">\r\n                <Form.Label>Battery UCL</Form.Label>\r\n                <Form.Control type=\"number\" name=\"batt_ucl\" value={dt.batt_ucl} onChange={handleFormChange} />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n\r\n          <ButtonToolbar>\r\n            <Button className=\"mybtn\" variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\r\n              Submit\r\n          </Button>\r\n            <Button className=\"mybtn\" variant=\"danger\" onClick={handleClose}>\r\n              Cancel\r\n          </Button>\r\n          </ButtonToolbar>\r\n        </Form>\r\n\r\n      </Modal.Body>\r\n\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default MyModal;","import React, { useState, useEffect } from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Button from 'react-bootstrap/Button'\r\nimport MyModal from './MyModal'\r\n\r\nconst URI = '/api/device'\r\n\r\nfunction Setting() {\r\n  const [data, setData] = useState([])\r\n  const [targetData, setTargetData] = useState(1)\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = (e) => {\r\n    setShow(true);\r\n    setTargetData(e.target.id)\r\n  }\r\n\r\n  const updateData = () => {\r\n    fetch(URI).then(res => res.json())\r\n      .then(json => {\r\n        setData(json)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateData()\r\n  }, [])\r\n\r\n  const renderRow = (item, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <th scope=\"row\">{item.id}</th>\r\n        <td>{item.location}</td>\r\n        <td>{item.alertActive ? \"True\" : \"False\"}</td>\r\n        <td>{item.temp_lcl}</td>\r\n        <td>{item.temp_ucl}</td>\r\n        <td>{item.humi_lcl}</td>\r\n        <td>{item.humi_ucl}</td>\r\n        <td>{item.batt_lcl}</td>\r\n        <td>{item.batt_ucl}</td>\r\n        <td><Button id={item.id} variant=\"primary\" onClick={handleShow}>Edit</Button></td>\r\n      </tr >\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Container className=\"table-container\" fluid=\"true\">\r\n      <Table responsive=\"md\" hover>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Location</th>\r\n            <th>Alert Active</th>\r\n            <th>Temp LCL</th>\r\n            <th>Temp UCL</th>\r\n            <th>Humi LCL</th>\r\n            <th>Humi UCL</th>\r\n            <th>Batt LCL</th>\r\n            <th>Batt UCL</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((item, i) => renderRow(item, i))}\r\n        </tbody>\r\n      </Table>\r\n      <MyModal show={show} handleClose={handleClose} updateData={updateData} idNo={targetData} />\r\n    </Container>\r\n\r\n  )\r\n}\r\n\r\nexport default Setting\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nconst URI = '/api/record/lastrecord'\r\n\r\nconst formatDate = (dateString) => {\r\n  const d = new Date(dateString)\r\n  const monthNames = [\r\n    \"Jan\", \"Feb\", \"Mar\",\r\n    \"Apr\", \"May\", \"Jun\", \"Jul\",\r\n    \"Aug\", \"Sep\", \"Oct\",\r\n    \"Nov\", \"Dec\"\r\n  ]\r\n  const minutes = d.getMinutes() < 10 ? '0' + d.getMinutes() : d.getMinutes();\r\n  return d.getDate() + \"-\" + monthNames[d.getMonth()] + \"-\" + d.getFullYear() + \" \" + d.getHours() + \":\" + minutes\r\n}\r\n\r\nconst displayCard = (dt, index) => {\r\n  return (\r\n    <Col key={index} xs={12} md={6} lg={4}>\r\n      <Card>\r\n        <Link className=\"btn btn-primary\" to={{ pathname: `/graph/${dt.deviceId}` }}>\r\n          <Card.Header>ID: {dt.deviceId} @ {dt.device.location}</Card.Header>\r\n        </Link>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col>\r\n              <Card.Text>Temperature</Card.Text>\r\n              <Card.Text>{dt.temp}&deg;C</Card.Text>\r\n            </Col>\r\n            <Col>\r\n              <Card.Text>Humidity</Card.Text>\r\n              <Card.Text>{dt.humi}%</Card.Text>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Card.Text className=\"last-update-time\">\r\n                Last update: {formatDate(dt.recordDate)}\r\n              </Card.Text>\r\n\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n\r\n  )\r\n}\r\n\r\nfunction Dashboard() {\r\n  const [data, setData] = useState([])\r\n\r\n  useEffect(() => {\r\n    fetch(URI).then(res => res.json())\r\n      .then(json => {\r\n        setData(json)\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        {data.map((data, index) => displayCard(data, index))}\r\n      </Row>\r\n    </Container>\r\n\r\n  )\r\n}\r\n\r\nexport default Dashboard","import React from \"react\";\r\nimport Chart from \"chart.js\";\r\n\r\nclass Line extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { width: 0, height: 0 };\r\n\r\n    this.chartRef = React.createRef();\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.drawLineChart();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  updateWindowDimensions() {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  drawLineChart = () => {\r\n    const wh = this.state.width\r\n    const breakPoint = 480\r\n    const fs = wh > breakPoint ? 12 : 8\r\n\r\n    this.lineChart = new Chart(this.chartRef.current.getContext(\"2d\"), {\r\n      type: \"line\",\r\n      data: { datasets: this.props.tempData },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: true,\r\n        legend: {\r\n          display: wh > breakPoint ? true : false,\r\n          position: \"bottom\",\r\n          fontSize: fs,\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: this.props.title,\r\n          fontSize: fs * 1.2\r\n        },\r\n        scales: {\r\n          xAxes: [{\r\n            type: \"time\",\r\n            time: {\r\n              unit: 'hour',\r\n              unitStepSize: 0.5,\r\n              round: 'hour',\r\n              tooltipFormat: \"h:mm:ss a\",\r\n              displayFormats: {\r\n                hour: 'MMM D, h:mm a'\r\n              }\r\n            },\r\n            ticks: {\r\n              fontSize: fs,\r\n              minRotation: 0,\r\n              maxRotation: 12\r\n            }\r\n          }],\r\n          yAxes: [{\r\n            type: 'linear',\r\n            ticks: {\r\n              min: this.props.yMin,\r\n              max: this.props.yMax,\r\n              fontSize: fs\r\n            },\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: this.props.yLabel,\r\n              fontSize: fs\r\n            }\r\n          }]\r\n        }\r\n      }\r\n\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"canvas-holder\">\r\n        <canvas id=\"myChart\" style={{\r\n          // \"minHeight\": \"100%\",\r\n          // \"minWidth\": \"70%\"\r\n        }\r\n        } ref={this.chartRef} />\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default Line;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport Line from './Line'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst baseSet = {\r\n  label: \"\",\r\n  borderColor: 'red',\r\n  data: [],\r\n  fill: false,\r\n  borderDash: [10, 5],\r\n  pointRadius: 0,\r\n  borderWidth: 1\r\n}\r\n\r\nconst makeDataSet = (label, color, data, borderDash, pointRadius, borderWidth) => {\r\n  return { ...baseSet, label: label, borderColor: color, data: data, borderDash: borderDash, pointRadius: pointRadius, borderWidth: borderWidth }\r\n}\r\n\r\n\r\nfunction Graph() {\r\n  const { id } = useParams()\r\n  const [data, setData] = useState([])\r\n\r\n  const tempData = [\r\n    makeDataSet(\"temp\", \"blue\", data.map(d => ({ t: d.recordDate, y: d.temp })), [], 3, 2),\r\n    makeDataSet(\"temp_ucl\", \"purple\", data.map(d => ({ t: d.recordDate, y: d.device.temp_ucl })), [10, 5], 0, 1),\r\n    makeDataSet(\"temp_lcl\", \"green\", data.map(d => ({ t: d.recordDate, y: d.device.temp_lcl })), [10, 5], 0, 1),\r\n  ]\r\n\r\n  const humiData = [\r\n    makeDataSet(\"humi\", \"blue\", data.map(d => ({ t: d.recordDate, y: d.humi })), [], 3, 2),\r\n    makeDataSet(\"humi_ucl\", \"purple\", data.map(d => ({ t: d.recordDate, y: d.device.humi_ucl })), [10, 5], 0, 1),\r\n    makeDataSet(\"humi_lcl\", \"green\", data.map(d => ({ t: d.recordDate, y: d.device.humi_lcl })), [10, 5], 0, 1),\r\n  ]\r\n\r\n  useEffect(() => {\r\n    let URI = `/api/record/${id}/24`\r\n    fetch(URI).then(res => res.json())\r\n      .then(json => {\r\n        setData(json)\r\n      })\r\n  }, [id])\r\n\r\n\r\n  return (\r\n    <Container fluid=\"false\" className=\"graph-container\">\r\n      <Button variant=\"outline-primary\">\r\n        <Link to=\"/\">back</Link>\r\n      </Button>\r\n\r\n      <Row >\r\n        <Col md={12} lg={6}>\r\n          <Line title={`Temperature (ID: ${id})`} yLabel=\"Temperature (deg C)\" yMin={10} yMax={40} tempData={tempData} />\r\n        </Col>\r\n\r\n        <Col md={12} lg={6}>\r\n          <Line title={`Humidity (ID: ${id})`} yLabel=\"Humidity (%)\" yMin={40} yMax={100} tempData={humiData} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n\r\n  )\r\n}\r\n\r\nexport default Graph","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\n\nimport MyNavbar from './components/Navbar';\nimport Setting from './components/Setting';\nimport Dashboard from './components/Dashboard';\nimport Graph from './components/Graph';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <MyNavbar />\n      <div className=\"container-fluid\">\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route exact path=\"/setting\" component={Setting} />\n          <Route exact path=\"/graph/:id\" component={Graph} />\n        </Switch>\n      </div>\n\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}